rule reference_genome_hGRC37:
    output:
        all="{prefix}%shGRC37.fa" % (config['dirs']['references']),
        chr_1="{prefix}%shGRC37_chromosomes/1.fa" % (config['dirs']['references']),
        chr_2="{prefix}%shGRC37_chromosomes/2.fa" % (config['dirs']['references']),
        chr_3="{prefix}%shGRC37_chromosomes/3.fa" % (config['dirs']['references']),
        chr_4="{prefix}%shGRC37_chromosomes/4.fa" % (config['dirs']['references']),
        chr_5="{prefix}%shGRC37_chromosomes/5.fa" % (config['dirs']['references']),
        chr_6="{prefix}%shGRC37_chromosomes/6.fa" % (config['dirs']['references']),
        chr_7="{prefix}%shGRC37_chromosomes/7.fa" % (config['dirs']['references']),
        chr_8="{prefix}%shGRC37_chromosomes/8.fa" % (config['dirs']['references']),
        chr_9="{prefix}%shGRC37_chromosomes/9.fa" % (config['dirs']['references']),
        chr_10="{prefix}%shGRC37_chromosomes/10.fa" % (config['dirs']['references']),
        chr_11="{prefix}%shGRC37_chromosomes/11.fa" % (config['dirs']['references']),
        chr_12="{prefix}%shGRC37_chromosomes/12.fa" % (config['dirs']['references']),
        chr_13="{prefix}%shGRC37_chromosomes/13.fa" % (config['dirs']['references']),
        chr_14="{prefix}%shGRC37_chromosomes/14.fa" % (config['dirs']['references']),
        chr_15="{prefix}%shGRC37_chromosomes/15.fa" % (config['dirs']['references']),
        chr_16="{prefix}%shGRC37_chromosomes/16.fa" % (config['dirs']['references']),
        chr_17="{prefix}%shGRC37_chromosomes/17.fa" % (config['dirs']['references']),
        chr_18="{prefix}%shGRC37_chromosomes/18.fa" % (config['dirs']['references']),
        chr_19="{prefix}%shGRC37_chromosomes/19.fa" % (config['dirs']['references']),
        chr_20="{prefix}%shGRC37_chromosomes/20.fa" % (config['dirs']['references']),
        chr_21="{prefix}%shGRC37_chromosomes/21.fa" % (config['dirs']['references']),
        chr_22="{prefix}%shGRC37_chromosomes/22.fa" % (config['dirs']['references']),
        chr_X="{prefix}%shGRC37_chromosomes/X.fa" % (config['dirs']['references']),
        chr_Y="{prefix}%shGRC37_chromosomes/Y.fa" % (config['dirs']['references'])
    log:
        "{prefix}%sReferences/hGRC37.fa.log" % (config['dirs']['logs'])
    benchmark:
        "{prefix}%sReferences/hGRC37.fa.benchmark" % (config['dirs']['benchmarks'])
    shell:
        "tmpdir=$(mktemp --tmpdir={config[dirs][tmpdir]} -d)"
        #"export tmpdir=/tmp/tmp.CuATH9Gqn6 2> {log}"
        " && rm -f {output.all}"
        ' && for chromosome in `echo "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X Y"`; do'
        " if [ ! -f $tmpdir/Homo_sapiens.GRCh37.dna.chromosome.$chromosome.fa.gz ]; then wget ftp://ftp.ensembl.org/pub/grch37/current/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.dna.chromosome.$chromosome.fa.gz -O $tmpdir/Homo_sapiens.GRCh37.dna.chromosome.$chromosome.fa.gz 2>> {log}; fi;"
        " if [ ! -f $(dirname {output.chr_1})/$chromosome.fa ]; then gunzip $tmpdir/Homo_sapiens.GRCh37.dna.chromosome.$chromosome.fa.gz -c > $(dirname {output.chr_1})/$chromosome.fa 2>> {log}; fi;"
        # apply to manual modification to be compatible with Michael's version
        ' if [ $chromosome == "3" ]; then sed -i "s/^CGCTACATAGCTGNCTTATTATTCGTGGTCCCCTATGACCCCCTGATCATTTTCCCTGAG$/CGCTACATAGCTGMCTTATTATTCGTGGTCCCCTATGACCCCCTGATCATTTTCCCTGAG/" $(dirname {output.chr_1})/$chromosome.fa 2>> {log}; fi;'
        ' if [ $chromosome == "3" ]; then sed -i "s/^CCNNGCTTGGTTCTAACAATGAATTTAATAAGAATTGTATTTAATCAATGTTTAAATATA$/CCRRGCTTGGTTCTAACAATGAATTTAATAAGAATTGTATTTAATCAATGTTTAAATATA/" $(dirname {output.chr_1})/$chromosome.fa 2>> {log}; fi;'
        " head -n 1 $(dirname {output.chr_1})/$chromosome.fa | cut -d ' ' -f -3 >> {output.all} 2>> {log};"
        " tail -n +2 $(dirname {output.chr_1})/$chromosome.fa >> {output.all} 2>> {log};"
        " done"
        # assert file is identical to what we expect
        " && echo 'a4d1c7c3c9afdc77184e1bdb04720648  {output.all}' > $tmpdir/md5 2>> {log}"
        " && echo '8a0fb0a0da242521641ad105bb109016  {output.chr_1}' > $tmpdir/md5 2>> {log}"
        " && echo 'c95d31228718f394263b886caa8a74c6  {output.chr_2}' > $tmpdir/md5 2>> {log}"
        " && echo '899a3e1fd087da5dbb6b927da5184c0f  {output.chr_3}' > $tmpdir/md5 2>> {log}"
        " && echo '19d0cb1df93c92b250ae177913b7474a  {output.chr_4}' > $tmpdir/md5 2>> {log}"
        " && echo '85758187835ee2535b4da63646493dd0  {output.chr_5}' > $tmpdir/md5 2>> {log}"
        " && echo '26991c57b53c3a0403eed06c7d4576d3  {output.chr_6}' > $tmpdir/md5 2>> {log}"
        " && echo 'a29ef7cbd9e824e4187e78e97aade995  {output.chr_7}' > $tmpdir/md5 2>> {log}"
        " && echo '2e2f5d4c76b7d64982a57281b21cc144  {output.chr_8}' > $tmpdir/md5 2>> {log}"
        " && echo '51519e1cbd6496b47a542085cb781518  {output.chr_9}' > $tmpdir/md5 2>> {log}"
        " && echo '374e6993c09d2c85afe32568b2f5cf46  {output.chr_10}' > $tmpdir/md5 2>> {log}"
        " && echo '75fb842cad829b0da58da1277a1cc625  {output.chr_11}' > $tmpdir/md5 2>> {log}"
        " && echo '6f40bc79064c68f2a8de01e00d7f5e33  {output.chr_12}' > $tmpdir/md5 2>> {log}"
        " && echo 'f202ce21d18cccfe5748204dcd200ca2  {output.chr_13}' > $tmpdir/md5 2>> {log}"
        " && echo 'e90d714884b18496e40d86b091aea7bf  {output.chr_14}' > $tmpdir/md5 2>> {log}"
        " && echo 'ec79b65368a4a0428cbc58d514936d09  {output.chr_15}' > $tmpdir/md5 2>> {log}"
        " && echo 'c0f671a9f4047d38e04f5a447ab32a50  {output.chr_16}' > $tmpdir/md5 2>> {log}"
        " && echo '2c8f179c65542fdd5555a633eab350e5  {output.chr_17}' > $tmpdir/md5 2>> {log}"
        " && echo 'c137b0fce74704019bfb322ccf6b2d4b  {output.chr_18}' > $tmpdir/md5 2>> {log}"
        " && echo '7a15bb86c749f8c10b97a0555c8837d1  {output.chr_19}' > $tmpdir/md5 2>> {log}"
        " && echo '2df600c569c68e0853462bf1aece0037  {output.chr_20}' > $tmpdir/md5 2>> {log}"
        " && echo 'c6ee443c60de90b83b9729676a012354  {output.chr_21}' > $tmpdir/md5 2>> {log}"
        " && echo 'bb0544da0cca98490eab38d284a97870  {output.chr_22}' > $tmpdir/md5 2>> {log}"
        " && echo '5b7f48db841076875918b43d99a13d82  {output.chr_X}' > $tmpdir/md5 2>> {log}"
        " && echo '8b5e36ebc92c9c9b56610e5a28e16dd5  {output.chr_Y}' > $tmpdir/md5 2>> {log}"
        " && md5sum -c $tmpdir/md5 2>> {log} 1>&2"
        " && rm -rf $tmpdir"


rule reference_genome_GRCm38_71:
    output:
        all="{prefix}%sMus_musculus.GRCm38.71.dna.fa" % (config['dirs']['references']),
        chr_1="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.1.fa" % (config['dirs']['references']),
        chr_2="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.2.fa" % (config['dirs']['references']),
        chr_3="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.3.fa" % (config['dirs']['references']),
        chr_4="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.4.fa" % (config['dirs']['references']),
        chr_5="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.5.fa" % (config['dirs']['references']),
        chr_6="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.6.fa" % (config['dirs']['references']),
        chr_7="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.7.fa" % (config['dirs']['references']),
        chr_8="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.8.fa" % (config['dirs']['references']),
        chr_9="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.9.fa" % (config['dirs']['references']),
        chr_10="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.10.fa" % (config['dirs']['references']),
        chr_11="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.11.fa" % (config['dirs']['references']),
        chr_12="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.12.fa" % (config['dirs']['references']),
        chr_13="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.13.fa" % (config['dirs']['references']),
        chr_14="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.14.fa" % (config['dirs']['references']),
        chr_15="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.15.fa" % (config['dirs']['references']),
        chr_16="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.16.fa" % (config['dirs']['references']),
        chr_17="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.17.fa" % (config['dirs']['references']),
        chr_18="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.18.fa" % (config['dirs']['references']),
        chr_19="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.19.fa" % (config['dirs']['references']),
        chr_X="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.X.fa" % (config['dirs']['references']),
        chr_Y="{prefix}%sGRCm38.71_chromosomes/Mus_musculus.GRCm38.71.dna.chromosome.Y.fa" % (config['dirs']['references'])
    log:
        "{prefix}%sReferences/GRCm38.71.fa.log" % (config['dirs']['logs'])
    benchmark:
        "{prefix}%sReferences/GRCm38.71.fa.benchmark" % (config['dirs']['benchmarks'])
    shell:
        "tmpdir=$(mktemp --tmpdir={config[dirs][tmpdir]} -d)"
        #"export tmpdir=/tmp/tmp.CuATH9Gqn6 2> {log}"
        " && rm -f {output.all}"
        ' && for chromosome in `echo "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y"`; do'
        " if [ ! -f $tmpdir/Mus_musculus.GRCm38.71.dna.chromosome.$chromosome.fa.gz ]; then wget ftp://ftp.ensembl.org/pub/release-71/fasta/mus_musculus/dna/Mus_musculus.GRCm38.71.dna.chromosome.$chromosome.fa.gz -O $tmpdir/Mus_musculus.GRCm38.71.dna.chromosome.$chromosome.fa.gz 2>> {log}; fi;"
        " if [ ! -f $(dirname {output.chr_1})/Mus_musculus.GRCm38.71.dna.chromosome.$chromosome.fa ]; then gunzip $tmpdir/Mus_musculus.GRCm38.71.dna.chromosome.$chromosome.fa.gz -c > $(dirname {output.chr_1})/Mus_musculus.GRCm38.71.dna.chromosome.$chromosome.fa 2>> {log}; fi;"
        " cat $(dirname {output.chr_1})/Mus_musculus.GRCm38.71.dna.chromosome.$chromosome.fa >> {output.all} 2>> {log};"
        " done"
        # assert file is identical to what we expect
        " && echo 'a9202273ace60d2834f4a1bfd416bb4c  {output.all}' > $tmpdir/md5 2>> {log}"
        " && echo '4c9625fdb469cb12d4acb6f1767fd858  {output.chr_1}' > $tmpdir/md5 2>> {log}"
        " && echo '06b811ae65e61b5aa08e77f5d82f4510  {output.chr_2}' > $tmpdir/md5 2>> {log}"
        " && echo 'a4049c5fbd82d20c755a89ad72bccbde  {output.chr_3}' > $tmpdir/md5 2>> {log}"
        " && echo '14bc4aadbb6a39f6755559d3b6107f18  {output.chr_4}' > $tmpdir/md5 2>> {log}"
        " && echo '6a17146b50c32295d29bc25ae0968c5a  {output.chr_5}' > $tmpdir/md5 2>> {log}"
        " && echo '9c826a2cf75769330af61153f51fba99  {output.chr_6}' > $tmpdir/md5 2>> {log}"
        " && echo '0d065ad085555caa3deda23db3c55f9a  {output.chr_7}' > $tmpdir/md5 2>> {log}"
        " && echo '1deec75e146803fe9d9c094dc4561282  {output.chr_8}' > $tmpdir/md5 2>> {log}"
        " && echo '50b9784308df28dcd8a27fdad906d751  {output.chr_9}' > $tmpdir/md5 2>> {log}"
        " && echo '2e498796909788f478128954ccc26a99  {output.chr_10}' > $tmpdir/md5 2>> {log}"
        " && echo '35b32658015d3ba1b59c37fa58f5523e  {output.chr_11}' > $tmpdir/md5 2>> {log}"
        " && echo 'acea6df7e47c6f8626241efc6ec71860  {output.chr_12}' > $tmpdir/md5 2>> {log}"
        " && echo 'df394a665f9154e3c670d44970a9095e  {output.chr_13}' > $tmpdir/md5 2>> {log}"
        " && echo '5ae989532e1cee20ebbd1dde3e487290  {output.chr_14}' > $tmpdir/md5 2>> {log}"
        " && echo '3ea000df445c9df62483ce96ba9f8a6d  {output.chr_15}' > $tmpdir/md5 2>> {log}"
        " && echo 'ad85ae6b15e476a6c5eeb90e52e03287  {output.chr_16}' > $tmpdir/md5 2>> {log}"
        " && echo '5fe64aa6fd4d6ad083ea53bfe8e49e63  {output.chr_17}' > $tmpdir/md5 2>> {log}"
        " && echo '0b585e254d07f863da0312ec54672a1f  {output.chr_18}' > $tmpdir/md5 2>> {log}"
        " && echo '262d6b46eba0d258ed845e888bc1d1d7  {output.chr_19}' > $tmpdir/md5 2>> {log}"
        " && echo '172ab515a2aae997490d51f96ed89852  {output.chr_X}' > $tmpdir/md5 2>> {log}"
        " && echo 'd5fa6a5454fbc287606b14d28afc11fe  {output.chr_Y}' > $tmpdir/md5 2>> {log}"
        " && md5sum -c $tmpdir/md5 2>> {log} 1>&2"
        " && rm -rf $tmpdir"


rule reference_bwa_index:
    input:
        "{prefix}%s{refgenome}.fa" % (config['dirs']['references'])
    output:
        bwt="{prefix}%s{refgenome}.fa.bwt" % (config['dirs']['references']),
        pac="{prefix}%s{refgenome}.fa.pac" % (config['dirs']['references']),
        ann="{prefix}%s{refgenome}.fa.ann" % (config['dirs']['references']),
        amb="{prefix}%s{refgenome}.fa.amb" % (config['dirs']['references']),
        sa="{prefix}%s{refgenome}.fa.sa" % (config['dirs']['references']),
    log:
        "{prefix}%sReferences/reference_bwa_index_{refgenome}.log" % (config['dirs']['logs'])
    benchmark:
        "{prefix}%sReferences/reference_bwa_index_{refgenome}.benchmark" % (config['dirs']['benchmarks'])
    conda:
        "../map/envs/spike_map.yaml"
    shell:
        "bwa index -a bwtsw {input} 2> {log} 1>&2"
        ' && md5sum -c <('
        'echo "'
        # If you want to add a new reference, than make sure you add accoring five lines here, the grep will restrict information to the correct reference name.
        '8ab1ad4b0d36b22c33b5f0ae9d9404a4  {wildcards.prefix}{config[dirs][references]}hGRC37.fa.amb\n'
        '7b89b29509852dfc59a6098463b821df  {wildcards.prefix}{config[dirs][references]}hGRC37.fa.ann\n'
        '42819dc2cd93fc15a79ec3a95f119831  {wildcards.prefix}{config[dirs][references]}hGRC37.fa.bwt\n'
        '848d2f3e268aa14df2e1014e77e6705c  {wildcards.prefix}{config[dirs][references]}hGRC37.fa.pac\n'
        '85313f4f9a907012e387191567b45c40  {wildcards.prefix}{config[dirs][references]}hGRC37.fa.sa\n'
        'd703db3530bbfd13f5b88bf753f97ff6  {wildcards.prefix}{config[dirs][references]}Mus_musculus.GRCm38.71.dna.fa.amb\n'
        '7c86d5b83387722ba0a6be941a831a64  {wildcards.prefix}{config[dirs][references]}Mus_musculus.GRCm38.71.dna.fa.ann\n'
        '666c98bc568069c0eafd092d70d4644a  {wildcards.prefix}{config[dirs][references]}Mus_musculus.GRCm38.71.dna.fa.bwt\n'
        'b056ccb4a4faf7990c8ece1c006946f9  {wildcards.prefix}{config[dirs][references]}Mus_musculus.GRCm38.71.dna.fa.pac\n'
        'e1f50e549da855576c42cca428a896ae  {wildcards.prefix}{config[dirs][references]}Mus_musculus.GRCm38.71.dna.fa.sa\n'
        'd94568885b9fd12c1c324be2cbf2a816  {wildcards.prefix}{config[dirs][references]}GRCh_GRCm_filtering_hybrid.fa.amb\n'
        'abfa293c4527172822b33c5a4c1124df  {wildcards.prefix}{config[dirs][references]}GRCh_GRCm_filtering_hybrid.fa.ann\n'
        'ed5b70b6acfea8180ccf5f00fd06709d  {wildcards.prefix}{config[dirs][references]}GRCh_GRCm_filtering_hybrid.fa.bwt\n'
        'e94a9577e9afb3a73a92df6e9c0915ea  {wildcards.prefix}{config[dirs][references]}GRCh_GRCm_filtering_hybrid.fa.pac\n'
        '7b75b73bdd1b86e28f9e2d71228e09bf  {wildcards.prefix}{config[dirs][references]}GRCh_GRCm_filtering_hybrid.fa.sa\n'
        '" | grep {wildcards.refgenome}) 2>> {log} 1>&2'


rule reference_dict:
    input:
        "{prefix}%s{refgenome}.fa" % (config['dirs']['references'])
    output:
        "{prefix}%s{refgenome}.dict" % (config['dirs']['references']),
    log:
        "{prefix}%sReferences/reference_dict_{refgenome}.log" % (config['dirs']['logs'])
    benchmark:
        "{prefix}%sReferences/reference_dict_{refgenome}.benchmark" % (config['dirs']['benchmarks'])
    conda:
        "../map/envs/spike_map.yaml"
    threads:
        1  # since this picard tools function doesn't support multithreading :-(
    shell:
        "java"
        " -Xmx4g"
        " -XX:ParallelGCThreads={threads}"
        " -jar ${{CONDA_PREFIX}}/share/picard-2.0.1-1/picard.jar"
        " CreateSequenceDictionary"
        " R={input}"
        " O={output}"
        " 2> {log}"
        " && obs=`tail -n +2 {output} | cut -f -3 | md5sum | cut -d ' ' -f 1`"
        ' && exp=`echo "'
        '6853fdd566fc1284657431e42807d71e\tMus_musculus.GRCm38.71.dna.dict\n'
        'd6c0d0b2e56d64b20cadec6638b5ffe7\thGRC37.dict\n'
        'da6e1a1b6767e0b703207172f1281d51\tGRCh_GRCm_filtering_hybrid.dict\n'
        '" | grep {wildcards.refgenome} | cut -f 1`'
        " && [ $exp == $obs ] 2>> {log}"
        # " && echo $obs"


rule reference_faidx:
    input:
        "{prefix}%s{refgenome}.fa" % (config['dirs']['references'])
    output:
        "{prefix}%s{refgenome}.fa.fai" % (config['dirs']['references']),
    log:
        "{prefix}%sReferences/reference_faidx_{refgenome}.log" % (config['dirs']['logs'])
    benchmark:
        "{prefix}%sReferences/reference_faidx_{refgenome}.benchmark" % (config['dirs']['benchmarks'])
    conda:
        "../map/envs/spike_map.yaml"
    threads:
        1  # since this picard tools function doesn't support multithreading :-(
    shell:
        "pwd=`pwd`"
        " && inp=`readlink -f {input}`"
        " && logfile=`readlink -f {log}`"
        " && samtools faidx $inp 2> $logfile"
        " && cd $pwd"
        ' && obs=`md5sum {output} | cut -d " " -f 1`'
        ' && exp=`echo "'
        '37c9b4b94879f23c986ba595a6e78841\t{wildcards.prefix}{config[dirs][references]}hGRC37.fa.fai\n'
        '86ae403b700f1183e18f92532b14915c\t{wildcards.prefix}{config[dirs][references]}Mus_musculus.GRCm38.71.dna.fa.fai\n'
        'f2832bc55c4b89138539ec4198a33631\t{wildcards.prefix}{config[dirs][references]}GRCh_GRCm_filtering_hybrid.fa.fai\n'
        '" | grep {wildcards.refgenome} | cut -f 1`'
        " && [ $exp == $obs ] 2>> {log}"


rule reference_xenograft_GRCh_GRCm:
    input:
        GRCh="{prefix}%shGRC37.fa" % (config['dirs']['references']),
        GRCm="{prefix}%sMus_musculus.GRCm38.71.dna.fa" % (config['dirs']['references']),
    output:
        "{prefix}%sGRCh_GRCm_filtering_hybrid.fa" % (config['dirs']['references']),
    log:
        "{prefix}%sReferences/reference_xenograft_GRCh_GRCm.log" % (config['dirs']['logs'])
    benchmark:
        "{prefix}%sReferences/reference_xenograft_GRCh_GRCm.benchmark" % (config['dirs']['benchmarks'])
    threads:
        1
    shell:
        # renaming mouse chromsomes to be easily filtered:
        # merging the genomes
        'cat'
        ' {input.GRCh}'
        ' <(cat {input.GRCm} | sed -e "s/>/>mouse_/g")'
        ' > {output}'
        ' 2> {log}'
        ' && obs=`md5sum {output} | cut -d " " -f 1`'
        ' && exp="60a50ac3cfb30b1c59e19e1155514091"'
        " && [ $exp == $obs ] 2>> {log}"


rule reference_GATKbundle:
    output:
        "{prefix}%s{db,1000G_phase1.indels.b37|Mills_and_1000G_gold_standard.indels.b37|1000G_omni2.5.b37|1000G_phase1.snps.high_confidence.b37|dbsnp_138.b37|hapmap_3.3.b37}.vcf" % (config['dirs']['references']),
    log:
        "{prefix}%sReferences/reference_GATKbundle_{db}.log" % (config['dirs']['logs'])
    benchmark:
        "{prefix}%sReferences/reference_GATKbundle_{db}.benchmark" % (config['dirs']['benchmarks'])
    threads:
        1
    shell:
        'wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/{wildcards.db}.vcf.gz -O - 2> {log}'
        ' | gunzip -c > {output} 2>> {log} && '
        'obs=`md5sum {output} | cut -d " " -f 1`'
        ' && exp=`echo "'
        '851a3b599b320a21d57cb1f9e9b679a7\t{wildcards.prefix}{config[dirs][references]}1000G_phase1.indels.b37.vcf\n'
        'd034f2fe30e69e3b582681e79bd57ba6\t{wildcards.prefix}{config[dirs][references]}1000G_phase1.snps.high_confidence.b37.vcf\n'
        '41d7ce0eda3510623890fe17a38a4603\t{wildcards.prefix}{config[dirs][references]}dbsnp_138.b37.vcf\n'
        '2eb228194b6c1fd250869e3610eb04b6\t{wildcards.prefix}{config[dirs][references]}hapmap_3.3.b37.vcf\n'
        '501259c9fcb195d6dd6ed111293a9d97\t{wildcards.prefix}{config[dirs][references]}Mills_and_1000G_gold_standard.indels.b37.vcf\n'
        'a610b201ceb28a6a44b37316821bbc9c\t{wildcards.prefix}{config[dirs][references]}1000G_omni2.5.b37.vcf\n'
        '" | grep {wildcards.db} | cut -f 1`'
        " && [ $exp == $obs ] 2>> {log}"


# a610b201ceb28a6a44b37316821bbc9c  /data/biotools/reference/GATK_bundle/2015_28/1000G_omni2.5.b37.vcf
# 67f8052a703c8b385144f88edc372493  /data/biotools/reference/GATK_bundle/resources/CosmicCodingMuts_v63_300113.vcf
# 70fbe8b7b1d1e6b4a21aaa8b0674fb34  /data/biotools/reference/dbSNP/dbSNP135_GRCh37.3.vcf
