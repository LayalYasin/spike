from scripts.parse_samplesheet import get_lanes_for_sampleID


rule rejoin_sample:
    input:
        lambda wildcards: ["%s%s%s/%s/%s_L%03i_%s_001.fastq.gz" % (wildcards.prefix, config['dirs']['intermediate'], config['stepnames']['demultiplex'], wildcards.run, wildcards.sample, int(lane), wildcards.direction)
                           for lane in get_lanes_for_sampleID("%s%s%s%s_ukd.csv" % (wildcards.prefix, config['dirs']['inputs'], config['dirs']['samplesheets'], wildcards.run), wildcards.sample)]
    benchmark:
        "{prefix}%s{run}/{sample}_R{direction}.benchmark" % config['dirs']['benchmarks']
    log:
        "{prefix}%s{run}/{sample}_R{direction}.log" % config['dirs']['logs']
    output:
        "{prefix}%s%s/{run,[^\/]+XX}/{sample, .*?}_{direction,R[1|2]}.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['rejoin_samples'])
    threads:
        1
    shell:
        'if [[ $(echo "{input}" | wc -w) -gt 1 ]]; then '
        # you can just concatenate multiple *.gz files into one, while
        # content when decompressed remains the same!
        'cat {input} > {output} 2> {log};'
        'else '
        'cp -l -v {input} {output} 2> {log}; '
        'chmod u+w {output} 2>> {log}; '
        'fi; '
